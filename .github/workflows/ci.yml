#
# Copyright (c) 2017, 2020 ADLINK Technology Inc.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0, or the Apache License, Version 2.0
# which is available at https://www.apache.org/licenses/LICENSE-2.0.
#
# SPDX-License-Identifier: EPL-2.0 OR Apache-2.0
#
# Contributors:
#   ADLINK zenoh team, <zenoh@adlink-labs.tech>
#
name: CI

on:
  push:
    branches: [ '**' ]
  pull_request:
    branches: [ '**' ]

jobs:
  build:

    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macOS-latest, windows-latest]

    steps:
    - uses: actions/checkout@v2

    - name: Install latest nightly
      uses: actions-rs/toolchain@v1
      with:
          components: rustfmt, clippy

    - name: Code format check
      uses: actions-rs/cargo@v1
      with:
        command: fmt
        args: -- --check

    - name: Clippy
      uses: actions-rs/cargo@v1
      with:
        command: clippy
        args: --all --examples -- -D warnings

    - name: Build
      uses: actions-rs/cargo@v1
      with:
        command: build
        args: --verbose --all-targets

    - name: Run tests
      uses: actions-rs/cargo@v1
      with:
        command: test
        args: --verbose

  docker:

    needs: [build]
    name: Build docker images
    runs-on: ubuntu-latest
    env:
      REPO: https://github.com/${{ github.repository }}
      BUILD_IMAGE: adlinktech/zenoh-dev-x86_64-unknown-linux-musl
      PUSH_IMAGE: ghcr.io/${{ github.repository }}:${GITHUB_REF#refs/heads/}

    steps:
    -
      name: Login to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GHCR_TOKEN }}
    -
      name: Checkout
      uses: actions/checkout@v2
    -
      name: Build zenoh in docker image
      run: docker run --init --rm -v $(pwd):/workdir -w /workdir ${{ env.BUILD_IMAGE }} cargo build --release --bins --lib --examples
    -
      name: Build and push docker image
      run: |
        docker build --build-arg REPO=${REPO} -t ${{ env.PUSH_IMAGE }} .
        docker push ${{ env.PUSH_IMAGE }}
